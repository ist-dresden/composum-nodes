<?xml version="1.0" encoding="ISO-8859-1" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
        version="2.0">

    <description>
        a collection of universal Sling related tags
    </description>
    <tlib-version>1.0</tlib-version>
    <short-name>cpnl</short-name>
    <uri>http://sling.composum.com/cpnl/1.0</uri>

    <tag>
        <description>
            the extended define objects tag
        </description>
        <name>defineObjects</name>
        <tag-class>com.composum.sling.cpnl.DefineObjectsTag</tag-class>
        <tei-class>com.composum.sling.cpnl.DefineObjectsTagTEI</tei-class>
        <body-content>empty</body-content>
    </tag>

    <tag>
        <description>
            the tag to declare a resource bundle (I18N)
        </description>
        <name>bundle</name>
        <tag-class>com.composum.sling.cpnl.BundleTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>basename</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Creates a component model from a given className. If it's a com.composum.sling.core.SlingBean, initialization is supported;
            if it's a com.composum.sling.core.bean.SlingBeanFactory annotated with com.composum.sling.core.bean.BeanFactory,
            the corresponding service is used to create it.
        </description>
        <name>component</name>
        <tag-class>com.composum.sling.cpnl.ComponentTag</tag-class>
        <tei-class>com.composum.sling.cpnl.ComponentTagTEI</tei-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>deprecated: use 'var' instead of 'id'</description>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The variable name where the created component model is stored. One of 'var' or 'id' must be declared</description>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>type</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>scope</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>replace</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <name>path</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>resource</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.apache.sling.api.resource.Resource</type>
        </attribute>
        <attribute>
            <description>If set (default true) and if the component is java.lang.AutoCloseable, it's close method is called when the tag rendering is finished.
                In that case, you might need to be careful not to use the component outside of the tag.</description>
            <name>close</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Includes a clientlib reference (JS, CSS etc).
            Client libraries are folders of sling:resourceType composum/nodes/commons/clientlib containing
            subfolders for each type, and declare dependencies to other client libraries. The tag can reference
            multiple client libraries if they are referenced by category, and if the client library/-ies have dependencies
            to other client libraries / resources. Thus, the tag can render as several link / script / img tags.
        </description>
        <name>clientlib</name>
        <tag-class>com.composum.sling.cpnl.ClientlibTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>Path to the client library - folder of sling:resourceType composum/nodes/commons/clientlib. One of path or category is required.</description>
            <name>path</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Category of client libraries to be included. One of path or category is required.</description>
            <name>category</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Type of rendered resources: css, js, link, img, png, jpg. Default: link.</description>
            <name>type</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>An optional boolean (JSP-EL) expression for a conditional clientlib link.</description>
            <name>test</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Generates a 'div' ans support the 'test' condition
        </description>
        <name>div</name>
        <tag-class>com.composum.sling.cpnl.DivTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>tagName</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>test</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>body</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
        <dynamic-attributes>true</dynamic-attributes>
    </tag>

    <tag>
        <description>
            Generates image elements with mapped source URLs
        </description>
        <name>image</name>
        <tag-class>com.composum.sling.cpnl.ImageTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>src</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tagName</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>urlAttr</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>map</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <name>format</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>title</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>alt</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>role</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>deprecated: use 'class' like a normal HTML tag</description>
            <name>classes</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>test</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
        <dynamic-attributes>true</dynamic-attributes>
    </tag>

    <tag>
        <description>
            Generates link elements with mapped URLs
        </description>
        <name>link</name>
        <tag-class>com.composum.sling.cpnl.LinkTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>href</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tagName</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>urlAttr</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>target</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>map</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>The format to set to build a url from the 'url' value: e.g. {} or {0} is replaced by the url.
            </description>
            <name>format</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>role</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>deprecated: use 'class' like a normal HTML tag</description>
            <name>classes</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>test</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>body</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
        <dynamic-attributes>true</dynamic-attributes>
    </tag>

    <tag>
        <description>
            Embeds an anchor link tag
        </description>
        <name>anchor</name>
        <tag-class>com.composum.sling.cpnl.AnchorTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>the identifier of the anchor link tag to set</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>deprecated: use 'class' like a normal HTML tag</description>
            <name>classes</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>an EL expression that determines whether the tag is shown</description>
            <name>test</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
        <dynamic-attributes>true</dynamic-attributes>
    </tag>

    <tag>
        <description>
            Generates form elements with mapped action URLs
        </description>
        <name>form</name>
        <tag-class>com.composum.sling.cpnl.FormTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>action</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>role</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>deprecated: use 'class' like a normal HTML tag</description>
            <name>classes</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>charset</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>enctype</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>method</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>test</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
        <dynamic-attributes>true</dynamic-attributes>
    </tag>

    <tag>
        <description>
            Generates a bootstrap table element with mapped AJAX URLs
        </description>
        <name>table</name>
        <tag-class>com.composum.sling.cpnl.TableTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>path</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>role</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>deprecated: use 'class' like a normal HTML tag</description>
            <name>classes</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>toolbar</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>test</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
        <dynamic-attributes>true</dynamic-attributes>
    </tag>

    <tag>
        <description>
            renders text values with optional tag and class, formatting and with escaping (XSS prevention)
        </description>
        <name>text</name>
        <tag-class>com.composum.sling.cpnl.TextTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>type</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>value</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>property</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>escape</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <name>i18n</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <name>format</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>locale</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.Locale</type>
        </attribute>
        <attribute>
            <name>tagName</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>deprecated: use 'class' like a normal HTML tag</description>
            <name>classes</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>test</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>
        <dynamic-attributes>true</dynamic-attributes>
    </tag>

    <function>
        <description>retrieves the translation for a string</description>
        <name>i18n</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String i18n(org.apache.sling.api.SlingHttpServletRequest,java.lang.String)</function-signature>
    </function>

    <function>
        <description>returns the absolute path for a child of a resource</description>
        <name>child</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String child(org.apache.sling.api.resource.Resource,java.lang.String)</function-signature>
    </function>

    <function>
        <description>Builds the URL for a repository asset path using the LinkUtil.getURL() method</description>
        <name>asset</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String asset(org.apache.sling.api.SlingHttpServletRequest,java.lang.String)</function-signature>
    </function>

    <function>
        <description>Builds the URL for a repository path using the LinkUtil.getURL() method</description>
        <name>url</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String url(org.apache.sling.api.SlingHttpServletRequest,java.lang.String)</function-signature>
    </function>

    <function>
        <description>Builds the URL for a repository path using the LinkUtil.getMappedURL() method</description>
        <name>mappedUrl</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String unmappedUrl(org.apache.sling.api.SlingHttpServletRequest,java.lang.String)</function-signature>
    </function>

    <function>
        <description>Builds the URL for a repository path using the LinkUtil.getUNappedURL() method</description>
        <name>unmappedUrl</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String unmappedUrl(org.apache.sling.api.SlingHttpServletRequest,java.lang.String)</function-signature>
    </function>

    <function>
        <description>Builds the URL for a repository path using the LinkUtil.getURL() method</description>
        <name>externalUrl</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String externalUrl(org.apache.sling.api.SlingHttpServletRequest,java.lang.String)</function-signature>
    </function>

    <function>
        <description>Builds the URL for a repository path using the LinkUtil.getMappedURL() method</description>
        <name>mappedExternalUrl</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String unmappedExternalUrl(org.apache.sling.api.SlingHttpServletRequest,java.lang.String)</function-signature>
    </function>

    <function>
        <description>Builds the URL for a repository path using the LinkUtil.getUNappedURL() method</description>
        <name>unmappedExternalUrl</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String unmappedExternalUrl(org.apache.sling.api.SlingHttpServletRequest,java.lang.String)</function-signature>
    </function>

    <function>
        <description>transforms a string value for rendering (does nothing)</description>
        <name>value</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.Object value(java.lang.Object)</function-signature>
    </function>

    <function>
        <description>transforms a string value for HTML text rendering</description>
        <name>text</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String text(java.lang.String)</function-signature>
    </function>

    <function>
        <description>transforms text of a rich text value as html for a tag attribute (encodes quotes)</description>
        <name>attr</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String attr(org.apache.sling.api.SlingHttpServletRequest,java.lang.String,int)</function-signature>
    </function>

    <function>
        <description>transforms a string value for rich text (HTML) rendering</description>
        <name>rich</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String rich(org.apache.sling.api.SlingHttpServletRequest,java.lang.String)</function-signature>
    </function>

    <function>
        <description>prevents the given value string from containing XSS stuff</description>
        <name>filter</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String filter(java.lang.String)</function-signature>
    </function>

    <function>
        <description>prevents the given value string from containing XSS stuff</description>
        <name>context</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String context(java.lang.String,java.lang.String)</function-signature>
    </function>

    <function>
        <description>builds the URI for a relative Composum URI (prepends the Composum base)</description>
        <name>cpm</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String cpm(java.lang.String)</function-signature>
    </function>

    <function>
        <description>transforms a string value for URL path rendering</description>
        <name>path</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String path(java.lang.String)</function-signature>
    </function>

    <function>
        <description>transforms a string value for script rendering</description>
        <name>script</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String script(java.lang.String)</function-signature>
    </function>

    <function>
        <description>transforms a string value for style rendering</description>
        <name>style</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String style(java.lang.String)</function-signature>
    </function>

    <function>
        <description>encapsulates a text with CDATA</description>
        <name>cdata</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.String cdata(java.lang.String)</function-signature>
    </function>

    <function>
        <description>checks whether an array of objects or collection contains an object</description>
        <name>contains</name>
        <function-class>com.composum.sling.cpnl.CpnlElFunctions</function-class>
        <function-signature>java.lang.Boolean contains(java.lang.Object, java.lang.Object)</function-signature>
    </function>

</taglib>
